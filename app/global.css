/*! reeeset.css 0.0.5 - https://github.com/corysimmons/reeeset *//*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}/*! reeeset.css */html{box-sizing:border-box}*,:after,:before{box-sizing:inherit;margin:0;padding:0}h1,figure,fieldset{margin:0}fieldset{padding:0}body{overflow-y:scroll}body:after{display:table;clear:both;content:''}audio,embed,iframe,img,input,object,video,table{max-width:100%}.browserupgrade{padding:15px;text-align:center;color:#fff;background:#333}.browserupgrade a{text-decoration:none;color:#1e90ff;font-weight:700}.browserupgrade a:hover{text-decoration:underline}html{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;line-height:1.5}h1,h2,h3,h4,h5,h6{margin-bottom:16px;margin-bottom:1rem;line-height:1.25}h1{font-size:36px;font-size:2.25rem}h2{font-size:32px;font-size:2rem}h3{font-size:28px;font-size:1.75rem}h4{font-size:24px;font-size:1.5rem}h5{font-size:20px;font-size:1.25rem}h6{font-size:16px;font-size:1rem}p,blockquote,pre,address,dl,ol,ul,table{margin-bottom:16px;margin-bottom:1rem}p:last-of-type{margin-bottom:0}table{width:100%}*,:after,:before{box-sizing:border-box}html{font-size:18px;height:100%}html:after{content:"288"}@media only screen and (max-width:767px){html{font-size:19.8px}}body{color:rgba(0,0,0,.8);font-family:Helvetica Neue,Helvetica,Arial,sans-serif;line-height:1.625;min-height:100%;position:relative}h1,h2,h3,h4,h5,h6{font-weight:700;line-height:1.625;margin-top:0;margin-bottom:1.625rem}h1{font-size:2.2rem}h2{font-size:1.75rem}h3{font-size:1.5rem}p+h3{margin-top:4.875rem}h4{font-size:1.25rem}h5{font-size:1rem}h6{font-size:.875rem}p{font-size:1rem;line-height:1.625;margin-top:0;margin-bottom:1.625rem}small{font-size:.875rem}@media print{*,:before,:after,:first-letter,:first-line{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}a[href^="#"]:after,a[href^="javascript:"]:after{content:""}pre,blockquote{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}tr,img{page-break-inside:avoid}img{max-width:100%!important}p,h2,h3{orphans:3;widows:3}h2,h3{page-break-after:avoid}}@media(min-width:768px){.Grid{display:flex}}.Grid>*{padding-left:1rem;padding-right:1rem}@media(min-width:768px){.Grid>*{flex:1;flex-grow:4}.Grid>:first-child{margin-left:-1rem}.Grid>:last-child{margin-right:-1rem}}.Grid-column--small{flex-grow:2}.Grid-column--large{flex-grow:8}.Wrapper{max-width:960px;margin-left:auto;margin-right:auto;margin-bottom:1.625rem;padding-left:1rem;padding-right:1rem}.Wrapper--small{max-width:640px}.Wrapper--large{max-width:1140px}.Wrapper--full{max-width:none}.FullWidth{width:100vw;position:relative;left:50%;right:50%;margin-left:-50vw;margin-right:-50vw}.FormItem{position:relative;padding-top:1.625rem}.FormItem-label{position:absolute;bottom:0;left:0;width:100%;padding:.6rem 1.5rem;line-height:1;border:1px solid transparent;transition:all 50ms ease-in-out}.FormItem-input{width:100%;line-height:1;border:none;border-bottom:1px solid #d9d9d9}.FormItem-input:focus+.FormItem-label,.FormItem-input:valid+.FormItem-label{transform:translateY(-100%);font-size:.8rem;opacity:1}button,.Button{background:#1c1c1c;color:#FFF;padding:.1em 1em;border-radius:.1em;border:1px solid #1c1c1c;font-weight:700;transition:.15s ease-in-out;transition-property:background,color}button:hover,.Button:hover{background:#202228;border-color:#202228}button:active,.Button:active{transform:translateY(1px)}button:focus,.Button:focus{outline:none;background-color:#3d3d3d;border-color:#3d3d3d}input{padding:.5rem 1.5rem;border:0;background:white;border:1px solid #d9d9d9}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMvX3Jlc2V0LnNjc3MiLCJnbG9iYWwuY3NzIiwiZm91bmRhdGlvbi9fYmFzZS5zY3NzIiwidmFyaWFibGVzL190eXBvLnNjc3MiLCJoZWxwZXJzL19taXhpbnMuc2NzcyIsInZhcmlhYmxlcy9fY29sb3JzLnNjc3MiLCJmb3VuZGF0aW9uL190eXBvZ3JhcGh5LnNjc3MiLCJ2YXJpYWJsZXMvX3NwYWNpbmdzLnNjc3MiLCJmb3VuZGF0aW9uL19wcmludC5zY3NzIiwiY29tcG9uZW50cy9fZ3JpZC5zY3NzIiwiY29tcG9uZW50cy9fZm9ybXMuc2NzcyIsImNvbXBvbmVudHMvX2J1dHRvbnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpRUFBaUUsQUFDakUsNEVBQTRFLEFBUTVFLEtBQ0UsdUJBQXdCLEFBQ3hCLDBCQUEyQixBQUMzQiw2QkFBK0IsQ0FDaEMsQUFNRCxLQUNFLFFBQVUsQ0FDWCxBQVlELDJGQWFFLGFBQWUsQ0FDaEIsQUFPRCw0QkFJRSxxQkFBc0IsQUFDdEIsdUJBQXlCLENBQzFCLEFBT0Qsc0JBQ0UsYUFBYyxBQUNkLFFBQVUsQ0FDWCxBQ2lCRCxrQkRSRSxZQUFjLENBQ2YsQUFTRCxFQUNFLDRCQUE4QixDQUMvQixBQU9ELGlCQUVFLFNBQVcsQ0FDWixBQVNELFlBQ0Usd0JBQTBCLENBQzNCLEFBTUQsU0FFRSxlQUFrQixDQUNuQixBQU1ELElBQ0UsaUJBQW1CLENBQ3BCLEFBT0QsR0FDRSxjQUFlLEFBQ2YsY0FBaUIsQ0FDbEIsQUFNRCxLQUNFLGdCQUFpQixBQUNqQixVQUFZLENBQ2IsQUFNRCxNQUNFLGFBQWUsQ0FDaEIsQUFNRCxRQUVFLGNBQWUsQUFDZixjQUFlLEFBQ2Ysa0JBQW1CLEFBQ25CLHVCQUF5QixDQUMxQixBQUVELElBQ0UsU0FBWSxDQUNiLEFBRUQsSUFDRSxhQUFnQixDQUNqQixBQVNELElBQ0UsUUFBVSxDQUNYLEFBTUQsZUFDRSxlQUFpQixDQUNsQixBQVNELE9BQ0UsZUFBaUIsQ0FD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V0FBWSxBQUNaLGNBQWUsQUFDZixZQUFhLEFBQ2IsK0JMTE8sQ0tNVixBQXBCTCw0RUEwQlEsNEJBQXFCLEFBQ3JCLGdCQUFrQixBQUNsQixTQUFXLENBQ2QsQUNqQ0wsZUFFSSxtQk5XVyxBTVZYLFdOUVEsQU1QUixpQkFBa0IsQUFDbEIsbUJBQW9CLEFBQ3BCLHlCTk9XLEFNTlgsZ0JBQWtCLEFBQ2xCLDRCQUE4QixBQUM5QixvQ0FBdUMsQ0FnQjFDLEFBekJELDJCQVlRLG1CTlpnQixBTWFoQixvQk5iZ0IsQ01jbkIsQUFkTCw2QkFpQlEseUJBQXFCLENBQ3hCLEFBbEJMLDJCQXFCUSxhQUFjLEFBQ2QseUJOUk8sQU1TUCxvQk5UTyxDTVVWLEFBR0wsTUFDSSxxQkFBc0IsQUFDdEIsU0FBVSxBQUNWLGlCQUFrQixBQUNsQix3Qk5iVyxDTWNkIiwiZmlsZSI6Imdsb2JhbC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgcmVlZXNldC5jc3MgMC4wLjUgLSBodHRwczovL2dpdGh1Yi5jb20vY29yeXNpbW1vbnMvcmVlZXNldCAqL1xuLyohIG5vcm1hbGl6ZS5jc3MgdjMuMC4zIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSBvZiBmb2N1c2VkIGVsZW1lbnRzIHdoZW4gdGhleSBhcmUgYWxzbyBpbiBhblxuICogYWN0aXZlL2hvdmVyIHN0YXRlLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbiAgbWFyZ2luOiAwOyAvKiAzICovXG59XG5cbi8qKlxuICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cblxuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cbiAqIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cbiAqL1xuXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cblxuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xufVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cblxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm9yZGVyOiAwOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn1cblxuLyohIHJlZWVzZXQuY3NzICovXG5cbi8qIGh0dHA6Ly93d3cucGF1bGlyaXNoLmNvbS8yMDEyL2JveC1zaXppbmctYm9yZGVyLWJveC1mdHcgKi9cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4vKiBodHRwczovL2Nzcy10cmlja3MuY29tL2luaGVyaXRpbmctYm94LXNpemluZy1wcm9iYWJseS1zbGlnaHRseS1iZXR0ZXItYmVzdC1wcmFjdGljZSAqL1xuKixcbjphZnRlcixcbjpiZWZvcmUge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qIFJlc2V0IE5vcm1hbGl6ZSBtYXJnaW5zL3BhZGRpbmcgKi9cbmgxLFxuZmlndXJlLFxuZmllbGRzZXQge1xuICBtYXJnaW46IDA7XG59XG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMDtcbn1cblxuLyogaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9lbGltaW5hdGUtanVtcHMtaW4taG9yaXpvbnRhbC1jZW50ZXJpbmctYnktZm9yY2luZy1hLXNjcm9sbC1iYXIgKi9cbmJvZHkge1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbi8qIENsZWFyZml4IGJvZHkgKi9cbmJvZHk6YWZ0ZXIge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgY2xlYXI6IGJvdGg7XG5cbiAgY29udGVudDogJyc7XG59XG5cbi8qIGh0dHA6Ly91bnN0b3BwYWJsZXJvYm90bmluamEuY29tL2VudHJ5L2ZsdWlkLWltYWdlcyAqL1xuYXVkaW8sXG5lbWJlZCxcbmlmcmFtZSxcbmltZyxcbmlucHV0LFxub2JqZWN0LFxudmlkZW8sXG50YWJsZSB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuLyogQWRkIGdlbmVyaWMgc3R5bGVzIHRvIEg1QlAgLmJyb3dzZXJ1cGdyYWRlIC0gaHR0cHM6Ly9naXRodWIuY29tL2g1YnAvaHRtbDUtYm9pbGVycGxhdGUvYmxvYi9tYXN0ZXIvZGlzdC9pbmRleC5odG1sI0wxOC1MMjAgKi9cbi5icm93c2VydXBncmFkZSB7XG4gIHBhZGRpbmc6IDE1cHg7XG5cbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xufVxuXG4uYnJvd3NlcnVwZ3JhZGUgYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICBjb2xvcjogIzFlOTBmZjtcblxuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmJyb3dzZXJ1cGdyYWRlIGE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLyogQmFzaWMgdHlwb2dyYXBoeSAqL1xuXG4vKiBodHRwczovL3d3dy5zbWFzaGluZ21hZ2F6aW5lLmNvbS8yMDE1LzExL3VzaW5nLXN5c3RlbS11aS1mb250cy1wcmFjdGljYWwtZ3VpZGUgKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBTZWdvZSBVSSwgUm9ib3RvLCBPeHlnZW4sIFVidW50dSwgQ2FudGFyZWxsLCBGaXJhIFNhbnMsIERyb2lkIFNhbnMsIEhlbHZldGljYSBOZXVlLCBzYW5zLXNlcmlmO1xuICBsaW5lLWhlaWdodDogMS41O1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuXG4gIGxpbmUtaGVpZ2h0OiAxLjI1O1xufVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgZm9udC1zaXplOiAyLjI1cmVtO1xufVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogMzJweDtcbiAgZm9udC1zaXplOiAycmVtO1xufVxuXG5oMyB7XG4gIGZvbnQtc2l6ZTogMjhweDtcbiAgZm9udC1zaXplOiAxLjc1cmVtO1xufVxuXG5oNCB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC1zaXplOiAxLjVyZW07XG59XG5cbmg1IHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXNpemU6IDEuMjVyZW07XG59XG5cbmg2IHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXNpemU6IDFyZW07XG59XG5cbnAsXG5ibG9ja3F1b3RlLFxucHJlLFxuYWRkcmVzcyxcbmRsLFxub2wsXG51bCxcbnRhYmxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxucDpsYXN0LW9mLXR5cGUge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4vKiBUd2Vha3MgKi9cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4iLCIvKlxuICAgIEdsb2JhbCBzdHlsZXNoZWV0XG4gICAgLS0tLS0tLS0tLS0tLS0tLS1cblxuICAgIEltcG9ydHMgYWxsIHBhcnRpYWxzIGZvciB0aGUgZ2xvYmFsIHN0eWxpbmcgdXNlZCBvbiBhbGwgcGFnZXNcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICAgIFR5cG9ncmFwaHkgdmFyaWFibGVzXG4gICAgLS0tLS0tLS0tLS0tLS0tLS0tLS1cbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICAgIENvbG9yc1xuICAgIC0tLS0tLVxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gICAgc3BhY2luZyB2YXJpYWJsZXNcbiAgICAtLS0tLS0tLS0tLS0tLS0tLVxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qISByZWVlc2V0LmNzcyAwLjAuNSAtIGh0dHBzOi8vZ2l0aHViLmNvbS9jb3J5c2ltbW9ucy9yZWVlc2V0ICovXG4vKiEgbm9ybWFsaXplLmNzcyB2My4wLjMgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IG9mIGZvY3VzZWQgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBhbHNvIGluIGFuXG4gKiBhY3RpdmUvaG92ZXIgc3RhdGUuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyB9XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7IH1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyohIHJlZWVzZXQuY3NzICovXG4vKiBodHRwOi8vd3d3LnBhdWxpcmlzaC5jb20vMjAxMi9ib3gtc2l6aW5nLWJvcmRlci1ib3gtZnR3ICovXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG4vKiBodHRwczovL2Nzcy10cmlja3MuY29tL2luaGVyaXRpbmctYm94LXNpemluZy1wcm9iYWJseS1zbGlnaHRseS1iZXR0ZXItYmVzdC1wcmFjdGljZSAqL1xuKixcbjphZnRlcixcbjpiZWZvcmUge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyogUmVzZXQgTm9ybWFsaXplIG1hcmdpbnMvcGFkZGluZyAqL1xuaDEsXG5maWd1cmUsXG5maWVsZHNldCB7XG4gIG1hcmdpbjogMDsgfVxuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyogaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9lbGltaW5hdGUtanVtcHMtaW4taG9yaXpvbnRhbC1jZW50ZXJpbmctYnktZm9yY2luZy1hLXNjcm9sbC1iYXIgKi9cbmJvZHkge1xuICBvdmVyZmxvdy15OiBzY3JvbGw7IH1cblxuLyogQ2xlYXJmaXggYm9keSAqL1xuYm9keTphZnRlciB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDtcbiAgY29udGVudDogJyc7IH1cblxuLyogaHR0cDovL3Vuc3RvcHBhYmxlcm9ib3RuaW5qYS5jb20vZW50cnkvZmx1aWQtaW1hZ2VzICovXG5hdWRpbyxcbmVtYmVkLFxuaWZyYW1lLFxuaW1nLFxuaW5wdXQsXG5vYmplY3QsXG52aWRlbyxcbnRhYmxlIHtcbiAgbWF4LXdpZHRoOiAxMDAlOyB9XG5cbi8qIEFkZCBnZW5lcmljIHN0eWxlcyB0byBINUJQIC5icm93c2VydXBncmFkZSAtIGh0dHBzOi8vZ2l0aHViLmNvbS9oNWJwL2h0bWw1LWJvaWxlcnBsYXRlL2Jsb2IvbWFzdGVyL2Rpc3QvaW5kZXguaHRtbCNMMTgtTDIwICovXG4uYnJvd3NlcnVwZ3JhZGUge1xuICBwYWRkaW5nOiAxNXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMzMzOyB9XG5cbi5icm93c2VydXBncmFkZSBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogIzFlOTBmZjtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLmJyb3dzZXJ1cGdyYWRlIGE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG4vKiBCYXNpYyB0eXBvZ3JhcGh5ICovXG4vKiBodHRwczovL3d3dy5zbWFzaGluZ21hZ2F6aW5lLmNvbS8yMDE1LzExL3VzaW5nLXN5c3RlbS11aS1mb250cy1wcmFjdGljYWwtZ3VpZGUgKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBTZWdvZSBVSSwgUm9ib3RvLCBPeHlnZW4sIFVidW50dSwgQ2FudGFyZWxsLCBGaXJhIFNhbnMsIERyb2lkIFNhbnMsIEhlbHZldGljYSBOZXVlLCBzYW5zLXNlcmlmO1xuICBsaW5lLWhlaWdodDogMS41OyB9XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI1OyB9XG5cbmgxIHtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBmb250LXNpemU6IDIuMjVyZW07IH1cblxuaDIge1xuICBmb250LXNpemU6IDMycHg7XG4gIGZvbnQtc2l6ZTogMnJlbTsgfVxuXG5oMyB7XG4gIGZvbnQtc2l6ZTogMjhweDtcbiAgZm9udC1zaXplOiAxLjc1cmVtOyB9XG5cbmg0IHtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBmb250LXNpemU6IDEuNXJlbTsgfVxuXG5oNSB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgZm9udC1zaXplOiAxLjI1cmVtOyB9XG5cbmg2IHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXNpemU6IDFyZW07IH1cblxucCxcbmJsb2NrcXVvdGUsXG5wcmUsXG5hZGRyZXNzLFxuZGwsXG5vbCxcbnVsLFxudGFibGUge1xuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XG5cbnA6bGFzdC1vZi10eXBlIHtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuXG4vKiBUd2Vha3MgKi9cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLypcbiAgICBjbGVhcmZpeFxuICAgIC0tLS0tLS0tXG5cbiAgICBBZGRzIGNsZWFyZml4IHRvIHRoZSBlbGVtZW50XG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcbiAgICBNZWRpYSBRdWVyeVxuICAgIC0tLS0tLS0tLS0tXG5cbiAgICBBZGQgZWFzeSBNZWRpYSBxdWVyaWVzXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcbiAgICBCYXNlIHN0eWxpbmdcbiAgICAtLS0tLS0tLS0tLS1cbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4qLCAqOmFmdGVyLCAqOmJlZm9yZSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgaGVpZ2h0OiAxMDAlOyB9XG4gIGh0bWw6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiMjg4XCI7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgIGh0bWwge1xuICAgICAgZm9udC1zaXplOiAxOS44cHg7IH0gfVxuXG5ib2R5IHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44KTtcbiAgZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuNjI1O1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuLypcbiAgICBUeXBvZ3JhcGh5IHN0eWxpbmdcbiAgICAtLS0tLS0tLS0tLS0tLS0tLS1cbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjYyNTtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMS42MjVyZW07IH1cblxuaDEge1xuICBmb250LXNpemU6IDIuMnJlbTsgfVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogMS43NXJlbTsgfVxuXG5oMyB7XG4gIGZvbnQtc2l6ZTogMS41cmVtOyB9XG4gIHAgKyBoMyB7XG4gICAgbWFyZ2luLXRvcDogNC44NzVyZW07IH1cblxuaDQge1xuICBmb250LXNpemU6IDEuMjVyZW07IH1cblxuaDUge1xuICBmb250LXNpemU6IDFyZW07IH1cblxuaDYge1xuICBmb250LXNpemU6IDAuODc1cmVtOyB9XG5cbnAge1xuICBmb250LXNpemU6IDFyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjYyNTtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMS42MjVyZW07IH1cblxuc21hbGwge1xuICBmb250LXNpemU6IDAuODc1cmVtOyB9XG5cbi8qXG4gICBQcmludCBzdHlsZXNcbiAgIC0tLS0tLS0tLS0tLVxuXG4gICBGcm9tOiBodHRwczovL2h0bWw1Ym9pbGVycGxhdGUuY29tL1xuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbkBtZWRpYSBwcmludCB7XG4gICosXG4gICo6YmVmb3JlLFxuICAqOmFmdGVyLFxuICAqOmZpcnN0LWxldHRlcixcbiAgKjpmaXJzdC1saW5lIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7IH1cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuICBhW2hyZWZdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjsgfVxuICBhYmJyW3RpdGxlXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiOyB9XG4gIC8qXG4gICAgICogRG9uJ3Qgc2hvdyBsaW5rcyB0aGF0IGFyZSBmcmFnbWVudCBpZGVudGlmaWVycyxcbiAgICAgKiBvciB1c2UgdGhlIGBqYXZhc2NyaXB0OmAgcHNldWRvIHByb3RvY29sXG4gICAgICovXG4gIGFbaHJlZl49XCIjXCJdOmFmdGVyLFxuICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICAvKlxuICAgICAqIFByaW50aW5nIFRhYmxlczpcbiAgICAgKiBodHRwOi8vY3NzLWRpc2N1c3MuaW5jdXRpby5jb20vd2lraS9QcmludGluZ19UYWJsZXNcbiAgICAgKi9cbiAgdGhlYWQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDsgfVxuICB0cixcbiAgaW1nIHtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7IH1cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfVxuICBwLFxuICBoMixcbiAgaDMge1xuICAgIG9ycGhhbnM6IDM7XG4gICAgd2lkb3dzOiAzOyB9XG4gIGgyLFxuICBoMyB7XG4gICAgcGFnZS1icmVhay1hZnRlcjogYXZvaWQ7IH0gfVxuXG4vKlxuICAgIGdyaWRcbiAgICAtLS0tXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5HcmlkIHtcbiAgICBkaXNwbGF5OiBmbGV4OyB9IH1cblxuLkdyaWQgPiAqIHtcbiAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICBwYWRkaW5nLXJpZ2h0OiAxcmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5HcmlkID4gKiB7XG4gICAgICBmbGV4OiAxO1xuICAgICAgZmxleC1ncm93OiA0OyB9XG4gICAgICAuR3JpZCA+ICo6Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tbGVmdDogLTFyZW07IH1cbiAgICAgIC5HcmlkID4gKjpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAtMXJlbTsgfSB9XG5cbi5HcmlkLWNvbHVtbi0tc21hbGwge1xuICBmbGV4LWdyb3c6IDI7IH1cblxuLkdyaWQtY29sdW1uLS1sYXJnZSB7XG4gIGZsZXgtZ3JvdzogODsgfVxuXG4vKlxuICAgIHdyYXBwZXJcbiAgICAtLS0tLS0tXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLldyYXBwZXIge1xuICBtYXgtd2lkdGg6IDk2MHB4O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiAxLjYyNXJlbTtcbiAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICBwYWRkaW5nLXJpZ2h0OiAxcmVtOyB9XG4gIC5XcmFwcGVyLS1zbWFsbCB7XG4gICAgbWF4LXdpZHRoOiA2NDBweDsgfVxuICAuV3JhcHBlci0tbGFyZ2Uge1xuICAgIG1heC13aWR0aDogMTE0MHB4OyB9XG4gIC5XcmFwcGVyLS1mdWxsIHtcbiAgICBtYXgtd2lkdGg6IG5vbmU7IH1cblxuLypcbiAgICBmdWxsIHdpZHRoXG4gICAgLS0tLS0tLS0tLVxuXG4gICAgY29tcG9uZW50IHRoYXQncyBhYmxlIHRvIGJyZWFrIG91dCB0aGUgY29udGFpbmVycyB3aWR0aCBhbmQgZXh0ZW5kIGFsbFxuICAgIHRoZSB3YXkgdG8gdGhlIHNjcmVlbiBlZGdlc1xuXG4gICAgZnJvbTogaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9mdWxsLXdpZHRoLWNvbnRhaW5lcnMtbGltaXRlZC13aWR0aC1wYXJlbnRzL1xuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi5GdWxsV2lkdGgge1xuICB3aWR0aDogMTAwdnc7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogNTAlO1xuICByaWdodDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTUwdnc7XG4gIG1hcmdpbi1yaWdodDogLTUwdnc7IH1cblxuLypcbiAgICBmb3JtcyBzdHlsaW5nXG4gICAgLS0tLS0tLS0tLS0tLVxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi5Gb3JtSXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy10b3A6IDEuNjI1cmVtOyB9XG4gIC5Gb3JtSXRlbS1sYWJlbCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IC42cmVtIDEuNXJlbTtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgNTBtcyBlYXNlLWluLW91dDsgfVxuICAuRm9ybUl0ZW0taW5wdXQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2Q5ZDlkOTsgfVxuICAuRm9ybUl0ZW0taW5wdXQ6Zm9jdXMgKyAuRm9ybUl0ZW0tbGFiZWwsXG4gIC5Gb3JtSXRlbS1pbnB1dDp2YWxpZCArIC5Gb3JtSXRlbS1sYWJlbCB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbiAgICBmb250LXNpemU6IDAuOHJlbTtcbiAgICBvcGFjaXR5OiAxOyB9XG5cbi8qXG4gICAgQnV0dG9uIHN0eWxpbmdcbiAgICAtLS0tLS0tLS0tLS0tLVxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbmJ1dHRvbixcbi5CdXR0b24ge1xuICBiYWNrZ3JvdW5kOiAjMWMxYzFjO1xuICBjb2xvcjogI0ZGRjtcbiAgcGFkZGluZzogLjFlbSAxZW07XG4gIGJvcmRlci1yYWRpdXM6IC4xZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICMxYzFjMWM7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB0cmFuc2l0aW9uOiAxNTBtcyBlYXNlLWluLW91dDtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYmFja2dyb3VuZCwgY29sb3I7IH1cbiAgYnV0dG9uOmhvdmVyLFxuICAuQnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjMjAyMjI4O1xuICAgIGJvcmRlci1jb2xvcjogIzIwMjIyODsgfVxuICBidXR0b246YWN0aXZlLFxuICAuQnV0dG9uOmFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCk7IH1cbiAgYnV0dG9uOmZvY3VzLFxuICAuQnV0dG9uOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzZDNkM2Q7XG4gICAgYm9yZGVyLWNvbG9yOiAjM2QzZDNkOyB9XG5cbmlucHV0IHtcbiAgcGFkZGluZzogLjVyZW0gMS41cmVtO1xuICBib3JkZXI6IDA7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZDlkOWQ5OyB9XG4iLCIvKlxuICAgIEJhc2Ugc3R5bGluZ1xuICAgIC0tLS0tLS0tLS0tLVxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuKiwgKjphZnRlciwgKjpiZWZvcmUge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3hcbn1cblxuaHRtbCB7XG4gICAgZm9udC1zaXplOiAkZm9udC1zaXplO1xuICAgIGhlaWdodDogMTAwJTtcblxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnI3sxOCAqIDE2fSc7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgbWVkaWEoJ3NjcmVlbicsICc8dGFibGV0Jykge1xuICAgICAgICBmb250LXNpemU6ICN7JGZvbnQtc2l6ZSAqIDEuMX07XG4gICAgfVxufVxuXG5ib2R5IHtcbiAgICBjb2xvcjogJGMtdGV4dDtcbiAgICBmb250LWZhbWlseTogJGZvbnQtZmFtaWx5O1xuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQ7XG4gICAgbWluLWhlaWdodDogMTAwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4iLCIvKlxuICAgIFR5cG9ncmFwaHkgdmFyaWFibGVzXG4gICAgLS0tLS0tLS0tLS0tLS0tLS0tLS1cbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiRmb250LXNpemU6IDE4cHg7XG4kYmFzZS1mb250LXNpemU6ICRmb250LXNpemUgLyAxNnB4ICogMTAwO1xuJGZvbnQtZmFtaWx5OiAnSGVsdmV0aWNhIE5ldWUnLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuXG4kbGluZS1oZWlnaHQ6IDEuNjI1O1xuIiwiLypcbiAgICBjbGVhcmZpeFxuICAgIC0tLS0tLS0tXG5cbiAgICBBZGRzIGNsZWFyZml4IHRvIHRoZSBlbGVtZW50XG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5AbWl4aW4gY2xlYXJmaXgoKSB7XG4gICAgJjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICB9XG59XG5cbkBtaXhpbiBjZigpIHtcbiAgICBAaW5jbHVkZSBjbGVhcmZpeCgpO1xufVxuXG5cbi8qXG4gICAgTWVkaWEgUXVlcnlcbiAgICAtLS0tLS0tLS0tLVxuXG4gICAgQWRkIGVhc3kgTWVkaWEgcXVlcmllc1xuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuJG1lZGlhLWRlc2t0b3A6IDk5MnB4O1xuJG1lZGlhLXRhYmxldDogIDc2N3B4O1xuJG1lZGlhLW1vYmlsZTogIDQ4MHB4O1xuXG5AZnVuY3Rpb24gdHJhbnNsYXRlLW1lZGlhLWNvbmRpdGlvbnMoJGMpIHtcbiAgICAkY29uZGl0aW9uc01hcDogKFxuICAgICAgICBcInNjcmVlblwiOiBcIm9ubHkgc2NyZWVuXCIsXG4gICAgICAgIFwicHJpbnRcIjogXCJvbmx5IHByaW50XCIsXG4gICAgICAgIFwicmV0aW5hXCI6IFwiKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMS41KSwgKG1pbi0tbW96LWRldmljZS1waXhlbC1yYXRpbzogMS41KSwgKC1vLW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMvMiksIChtaW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAxLjUpLCAobWluLXJlc29sdXRpb246IDEyMGRwaSlcIixcblxuICAgICAgICBcIj5kZXNrdG9wXCI6IFwiKG1pbi13aWR0aDogI3skbWVkaWEtZGVza3RvcCArIDF9KVwiLFxuICAgICAgICBcIjxkZXNrdG9wXCI6IFwiKG1heC13aWR0aDogI3skbWVkaWEtZGVza3RvcH0pXCIsXG4gICAgICAgIFwiPnRhYmxldFwiOiAgXCIobWluLXdpZHRoOiAjeyRtZWRpYS10YWJsZXQgKyAxfSlcIixcbiAgICAgICAgXCI8dGFibGV0XCI6ICBcIihtYXgtd2lkdGg6ICN7JG1lZGlhLXRhYmxldH0pXCIsXG4gICAgICAgIFwiPm1vYmlsZVwiOiAgXCIobWluLXdpZHRoOiAjeyRtZWRpYS1tb2JpbGUgKyAxfSlcIixcbiAgICAgICAgXCI8bW9iaWxlXCI6ICBcIihtYXgtd2lkdGg6ICN7JG1lZGlhLW1vYmlsZX0pXCJcbiAgICApO1xuICAgIEByZXR1cm4gbWFwLWdldCggJGNvbmRpdGlvbnNNYXAsICRjICk7XG59XG5cbi8vIFRoZSBtZWRpYSBtaXhpblxuQG1peGluIG1lZGlhKCRhcmdzLi4uKSB7XG4gICAgJHF1ZXJ5OiBcIlwiO1xuXG4gICAgLy8gTG9vcHMgdGhyb3VnaCBhbGwgJGFyZ3VtZW50cyBwYXNzZWQsXG4gICAgLy8gYW5kIGlmIG1vcmUgdGhlbiBvbmUgaXMgZm91bmQgYWRkIFwiIGFuZCBcIiBiZXR3ZWVuIHRoZW1cbiAgICBAZWFjaCAkYXJnIGluICRhcmdzIHtcbiAgICAgICAgJG9wOiBcIlwiO1xuICAgICAgICBAaWYgKCAkcXVlcnkgIT0gXCJcIiApIHtcbiAgICAgICAgICAgICRvcDogXCIgYW5kIFwiO1xuICAgICAgICB9XG4gICAgICAgICRxdWVyeTogJHF1ZXJ5ICsgJG9wICsgdHJhbnNsYXRlLW1lZGlhLWNvbmRpdGlvbnMoJGFyZyk7XG4gICAgfVxuICAgIEBtZWRpYSAjeyRxdWVyeX0geyBAY29udGVudDsgfVxufVxuIiwiLypcbiAgICBDb2xvcnNcbiAgICAtLS0tLS1cbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiRjLXByaW1haXJ5ICAgIDogIzIwMjIyODtcbiRjLXNlY29uZGFyeSAgIDogI2EzYjZiNjtcbiRjLWFjY2VudCAgICAgIDogIzk4MTcyMTtcblxuJGMtYmFja2dyb3VuZCAgIDogI0YyRjJFRTtcblxuJGMtdGV4dCAgICAgICAgOiByZ2JhKGJsYWNrLCAuOCk7XG4kYy1saW5rICAgICAgICA6ICRjLXByaW1haXJ5O1xuJGMtbGluay1ob3ZlciAgOiBkYXJrZW4oJGMtbGluaywgNSUpO1xuJGMtbGluay12aXNpdGVkOiBkYXJrZW4oJGMtbGluaywgMTAlKTtcblxuJHdoaXRlOiAjRkZGO1xuXG4kZ3JheTE6ICMxYzFjMWM7XG4kZ3JheTI6ICMzZDNkM2Q7XG4kZ3JheTM6ICMzZDNkM2Q7XG5cbiRncmF5NDogI2NkY2RjZDtcbiRncmF5NTogI2Q5ZDlkOTtcbiRncmF5NjogI2U2ZTZlNjtcblxuJGJsYWNrOiAjMDAwO1xuIiwiLypcbiAgICBUeXBvZ3JhcGh5IHN0eWxpbmdcbiAgICAtLS0tLS0tLS0tLS0tLS0tLS1cbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQ7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAkc3BhY2luZztcbn1cblxuaDEge1xuICAgIGZvbnQtc2l6ZTogMi4ycmVtO1xufVxuXG5oMiB7XG4gICAgZm9udC1zaXplOiAxLjc1cmVtO1xufVxuXG5oMyB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG5cbiAgICBwICsgJiB7IG1hcmdpbi10b3A6IDMgKiAkc3BhY2luZzsgfVxufVxuXG5oNCB7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xufVxuXG5oNSB7XG4gICAgZm9udC1zaXplOiAxcmVtO1xufVxuXG5oNiB7XG4gICAgZm9udC1zaXplOiAwLjg3NXJlbTtcbn1cblxucCB7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAkbGluZS1oZWlnaHQ7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAkc3BhY2luZztcbn1cblxuc21hbGwge1xuICAgIGZvbnQtc2l6ZTogMC44NzVyZW07XG59XG4iLCIvKlxuICAgIHNwYWNpbmcgdmFyaWFibGVzXG4gICAgLS0tLS0tLS0tLS0tLS0tLS1cbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiRndXR0ZXI6IDFyZW07XG5cbiRzcGFjaW5nLWxhcmdlOiAjeyRsaW5lLWhlaWdodCAqIDIgKyAncmVtJ307XG4kc3BhY2luZzogI3skbGluZS1oZWlnaHQgKyAncmVtJ307XG4kc3BhY2luZy1zbWFsbDogI3skbGluZS1oZWlnaHQgLyAyICsgJ3JlbSd9O1xuIiwiLypcbiAgIFByaW50IHN0eWxlc1xuICAgLS0tLS0tLS0tLS0tXG5cbiAgIEZyb206IGh0dHBzOi8vaHRtbDVib2lsZXJwbGF0ZS5jb20vXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5AbWVkaWEgcHJpbnQge1xuICAgICosXG4gICAgKjpiZWZvcmUsXG4gICAgKjphZnRlcixcbiAgICAqOmZpcnN0LWxldHRlcixcbiAgICAqOmZpcnN0LWxpbmUge1xuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgICAgICAvLyBCbGFjayBwcmludHMgZmFzdGVyOlxuICAgICAgICAvLyBodHRwOi8vd3d3LnNhbmJlaWppLmNvbS9hcmNoaXZlcy85NTNcbiAgICAgICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgICB0ZXh0LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIGEsXG4gICAgYTp2aXNpdGVkIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgfVxuXG4gICAgYVtocmVmXTphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiO1xuICAgIH1cblxuICAgIGFiYnJbdGl0bGVdOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogRG9uJ3Qgc2hvdyBsaW5rcyB0aGF0IGFyZSBmcmFnbWVudCBpZGVudGlmaWVycyxcbiAgICAgKiBvciB1c2UgdGhlIGBqYXZhc2NyaXB0OmAgcHNldWRvIHByb3RvY29sXG4gICAgICovXG5cbiAgICBhW2hyZWZePVwiI1wiXTphZnRlcixcbiAgICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgIH1cblxuICAgIHByZSxcbiAgICBibG9ja3F1b3RlIHtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzk5OTtcbiAgICAgICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogUHJpbnRpbmcgVGFibGVzOlxuICAgICAqIGh0dHA6Ly9jc3MtZGlzY3Vzcy5pbmN1dGlvLmNvbS93aWtpL1ByaW50aW5nX1RhYmxlc1xuICAgICAqL1xuXG4gICAgdGhlYWQge1xuICAgICAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7XG4gICAgfVxuXG4gICAgdHIsXG4gICAgaW1nIHtcbiAgICAgICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICAgIH1cblxuICAgIGltZyB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIHAsXG4gICAgaDIsXG4gICAgaDMge1xuICAgICAgICBvcnBoYW5zOiAzO1xuICAgICAgICB3aWRvd3M6IDM7XG4gICAgfVxuXG4gICAgaDIsXG4gICAgaDMge1xuICAgICAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDtcbiAgICB9XG59XG4iLCIvKlxuICAgIGdyaWRcbiAgICAtLS0tXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4uR3JpZCB7XG4gICAgQGluY2x1ZGUgbWVkaWEoJz50YWJsZXQnKSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuXG4gICAgPiAqIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAkZ3V0dGVyO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAkZ3V0dGVyO1xuXG4gICAgICAgIEBpbmNsdWRlIG1lZGlhKCc+dGFibGV0Jykge1xuICAgICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICAgIGZsZXgtZ3JvdzogNDtcbiAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQgeyBtYXJnaW4tbGVmdDogLSN7JGd1dHRlcn07IH1cbiAgICAgICAgICAgICY6bGFzdC1jaGlsZCB7IG1hcmdpbi1yaWdodDogLSN7JGd1dHRlcn07IH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICYtY29sdW1uLS1zbWFsbCB7IGZsZXgtZ3JvdzogMjsgfVxuICAgICYtY29sdW1uLS1sYXJnZSB7IGZsZXgtZ3JvdzogODsgfVxufVxuXG4vKlxuICAgIHdyYXBwZXJcbiAgICAtLS0tLS0tXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4uV3JhcHBlciB7XG4gICAgbWF4LXdpZHRoOiA5NjBweDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgbWFyZ2luLWJvdHRvbTogJHNwYWNpbmc7XG4gICAgcGFkZGluZy1sZWZ0OiAkZ3V0dGVyO1xuICAgIHBhZGRpbmctcmlnaHQ6ICRndXR0ZXI7XG5cbiAgICAmLS1zbWFsbCAgeyBtYXgtd2lkdGg6IDY0MHB4OyB9XG4gICAgJi0tbGFyZ2UgIHsgbWF4LXdpZHRoOiAxMTQwcHg7IH1cbiAgICAmLS1mdWxsICAgeyBtYXgtd2lkdGg6IG5vbmU7IH1cbn1cblxuLypcbiAgICBmdWxsIHdpZHRoXG4gICAgLS0tLS0tLS0tLVxuXG4gICAgY29tcG9uZW50IHRoYXQncyBhYmxlIHRvIGJyZWFrIG91dCB0aGUgY29udGFpbmVycyB3aWR0aCBhbmQgZXh0ZW5kIGFsbFxuICAgIHRoZSB3YXkgdG8gdGhlIHNjcmVlbiBlZGdlc1xuXG4gICAgZnJvbTogaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9mdWxsLXdpZHRoLWNvbnRhaW5lcnMtbGltaXRlZC13aWR0aC1wYXJlbnRzL1xuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLkZ1bGxXaWR0aCB7XG4gICAgd2lkdGg6IDEwMHZ3O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgcmlnaHQ6IDUwJTtcbiAgICBtYXJnaW4tbGVmdDogLTUwdnc7XG4gICAgbWFyZ2luLXJpZ2h0OiAtNTB2dztcbn1cbiIsIi8qXG4gICAgZm9ybXMgc3R5bGluZ1xuICAgIC0tLS0tLS0tLS0tLS1cbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi5Gb3JtIHtcblxufVxuXG4uRm9ybUl0ZW0ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nLXRvcDogJHNwYWNpbmc7XG5cbiAgICAmLWxhYmVsIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBwYWRkaW5nOiAuNnJlbSAxLjVyZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDUwbXMgZWFzZS1pbi1vdXQ7XG4gICAgfVxuXG4gICAgJi1pbnB1dCB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGdyYXk1O1xuICAgIH1cbiAgICAvLyAmLWlucHV0OmZvY3VzICsgJi1sYWJlbCB7XG4gICAgLy8gICAgIG9wYWNpdHk6IDA7XG4gICAgLy8gfVxuICAgICYtaW5wdXQ6Zm9jdXMgKyAmLWxhYmVsLFxuICAgICYtaW5wdXQ6dmFsaWQgKyAmLWxhYmVsIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbiAgICAgICAgZm9udC1zaXplOiAwLjhyZW07XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxufVxuIiwiLypcbiAgICBCdXR0b24gc3R5bGluZ1xuICAgIC0tLS0tLS0tLS0tLS0tXG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5idXR0b24sXG4uQnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kOiAkZ3JheTE7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBwYWRkaW5nOiAuMWVtIDFlbTtcbiAgICBib3JkZXItcmFkaXVzOiAuMWVtO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmF5MTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB0cmFuc2l0aW9uOiAxNTBtcyBlYXNlLWluLW91dDtcbiAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiBiYWNrZ3JvdW5kLCBjb2xvcjtcblxuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkYy1wcmltYWlyeTtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAkYy1wcmltYWlyeTtcbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxcHgpO1xuICAgIH1cblxuICAgICY6Zm9jdXMge1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheTI7XG4gICAgICAgIGJvcmRlci1jb2xvcjogJGdyYXkyO1xuICAgIH1cbn1cblxuaW5wdXQge1xuICAgIHBhZGRpbmc6IC41cmVtIDEuNXJlbTtcbiAgICBib3JkZXI6IDA7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXk1O1xufVxuIl19 */
